<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>e0b43de987b8add01acc33f50cbb3558</enforce_acl>
        <http_method>POST</http_method>
        <name>Post</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	function getSysId(table, val) {
		var gr = new GlideRecord(table)
		gr.setLimit(1)
		gr.addQuery('name',val)
		gr.query()
		
		if(gr.next()) return gr.sys_id
	}
	
	var requestBody = request.body.data
	
	var gr = new GlideRecord('x_dot_dirmgr_sys_user_transaction')
	
	try{
		gr.initialize()
		for(key in requestBody) {
			if(key == 'location') {
				gr[key] = getSysId('cmn_location', requestBody[key])
			} else if(key == 'cost_center') {
				gr[key] = getSysId('cmn_cost_center', requestBody[key])
			} else if(key == 'department') {
				gr[key] = getSysId('cmn_department', requestBody[key])
			} else if(key == 'manager') {
				gr[key] = getSysId('sys_user', requestBody[key])
			} else if(key == 'u_oa') {
				gr[key] = getSysId('u_mode_definition', requestBody[key])
			} else {
				gr[key] = requestBody[key]
			}
		}
		
		return gr.insert()
	} catch(err) {
		return err
	}
	//var gr = new GlideRecord('x_dot_dirmgr_sys_user_transaction')

})(request, response);]]></operation_script>
        <operation_uri>/api/x_dot_dirmgr/container/post</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/post</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>Nicholas.Blanchard</sys_created_by>
        <sys_created_on>2023-02-03 00:26:39</sys_created_on>
        <sys_id>76b2f111877ce5d08c5c62860cbb3578</sys_id>
        <sys_mod_count>50</sys_mod_count>
        <sys_name>Post</sys_name>
        <sys_package display_value="DOT Employee Directory Manager" source="x_dot_dirmgr">f2ba728813da041032813092e144b01f</sys_package>
        <sys_policy/>
        <sys_scope display_value="DOT Employee Directory Manager">f2ba728813da041032813092e144b01f</sys_scope>
        <sys_update_name>sys_ws_operation_76b2f111877ce5d08c5c62860cbb3578</sys_update_name>
        <sys_updated_by>Nicholas.Blanchard</sys_updated_by>
        <sys_updated_on>2023-02-04 04:19:17</sys_updated_on>
        <web_service_definition display_value="DOT Employee Directory Manager Container">74daba8813da041032813092e144b0e1</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
